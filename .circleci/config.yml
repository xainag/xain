version: 2.1
jobs:
  # this job uses the ubuntu 18.04 docker image so that we have both
  # clang-format-8+ and python3.7
  tests:
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "setup.py" }}-{{ checksum "xain/config.py" }}

      - run:
          name: install dependencies
          command: |
            apt-get update && apt-get install -y clang-format-8 python3.7 python3-venv python3.7-venv make
            ln -s /usr/bin/clang-format-8 /usr/bin/clang-format
            python3.7 -m venv venv
            . venv/bin/activate
            ./scripts/setup.sh

      - save_cache:
          paths:
            - ./venv
          key: v3-dependencies-{{ checksum "setup.py" }}-{{ checksum "xain/config.py" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            ./scripts/test.sh

  tests_rust:
    docker:
      - image: circleci/rust:1.37.0
    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            sudo apt-get update && sudo apt-get install -y cmake golang

      - run:
          name: run tests
          command: |
            ./scripts/test_rust.sh

  tests_slow:
    docker:
      - image: circleci/python:3.7
    resource_class: xlarge
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "setup.py" }}-{{ checksum "xain/config.py" }}

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            ./scripts/setup.sh

      - save_cache:
          paths:
            - ./venv
          key: v3-dependencies-{{ checksum "setup.py" }}-{{ checksum "xain/config.py" }}

      - run:
          name: run tests slow
          command: |
            . venv/bin/activate
            ./scripts/test_slow.sh

  tests_benchmark:
    docker:
      - image: circleci/python:3.7
    resource_class: large
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "setup.py" }}-{{ checksum "xain/config.py" }}

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            ./scripts/setup.sh

      - save_cache:
          paths:
            - ./venv
          key: v3-dependencies-{{ checksum "setup.py" }}-{{ checksum "xain/config.py" }}

      - run:
          name: run tests benchmark
          command: |
            . venv/bin/activate
            python -m xain.benchmark.exec --group_name=ci-test-group --task_name=ci-test-task --dataset=fashion-mnist-100p-iid-balanced --model=blog_cnn --R=2 --E=2 --C=0.02 --B=64

  # Test if docker image can be build without failing
  docker_build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      # Just trigger build and see if it completes successfully
      # Later on we might push the image to a registry but right
      # Now we just want to ensure a given change does not break
      # The docker build
      - run: docker build -t build-in-ci:$CIRCLE_BUILD_NUM .

workflows:
  version: 2.1
  qa:
    jobs:
      - tests
      - tests_slow
      - tests_benchmark
      - tests_rust
      - docker_build
