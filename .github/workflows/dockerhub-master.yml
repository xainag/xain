name: DockerHub + Kubernetes (master)

on:
  push:
    branches:
      - master

jobs:
  build-tag-push-master:
    name: build-tag-push-master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: build-tag-push
        uses: docker/build-push-action@v2
        id: docker
        with:
          context: .
          file: docker/Dockerfile
          tags: xaynetwork/xaynet:development
          push: true
          build-args: COORDINATOR_FEATURES=metrics

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Get DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.K8S_CLUSTER }}

      - name: Re-apply manifests
        run: kubectl apply -n development -k $GITHUB_WORKSPACE/k8s/coordinator/development

      - name: Force deployment rollout
        run: kubectl rollout -n development restart deployment/coordinator-deployment

      - name: Check deployment status
        run: kubectl rollout -n development status deployment/coordinator-deployment

      - name: Clean-up stale ReplicaSets
        run: kubectl delete -n development replicasets $(kubectl get -n development replicasets | awk 'NR!=1 && ($2==0) {print $1}')

      - name: Notify on Slack
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: custom
          fields: workflow,job,repo,ref
          custom_payload: |
            {
              username: 'GitHub Actions',
              icon_emoji: ':octocat:',
              attachments: [{
                color: '${{ steps.docker.outcome }}' === 'success' ? 'good' : '${{ steps.docker.outcome }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\nRepository: :xaynet: ${process.env.AS_REPO}\nRef: ${process.env.AS_REF}\nTags: development`,
              }]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
