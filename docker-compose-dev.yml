version: "3.7"
services:

  minio-dev:
    image: minio/minio # Stable minio
    volumes:
      - minio-data:/data
    networks:
      - xain-fl-dev
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command:
        server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "9000:9000"

  initial-buckets:
    image: minio/mc
    depends_on:
      - minio-dev
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    networks:
      - xain-fl-dev
    entrypoint: >
      /bin/sh -c "
        echo Waiting for minio service to start...;
        while ! nc -z minio-dev 9000;
        do
          sleep 5;
        done;
        echo Connected!;
        mc config host add dev-minio http://minio-dev:9000 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY};
        /usr/bin/mc mb -p dev-minio/xain-fl-temporary-weights;
        /usr/bin/mc mb -p dev-minio/xain-fl-aggregated-weights;
        /usr/bin/mc policy set upload dev-minio/xain-fl-temporary-weights;
        /usr/bin/mc policy set download dev-minio/xain-fl-temporary-weights;
        /usr/bin/mc policy set upload dev-minio/xain-fl-aggregated-weights;
        /usr/bin/mc policy set download dev-minio/xain-fl-aggregated-weights;
        /usr/bin/mc admin trace -v -e dev-minio;
      "

  redis:
    image: redis:5 # current stable version, v6 out between March 2020 and May 2020
    hostname: redis
    entrypoint: /usr/local/bin/redis-server --appendonly yes --appendfsync everysec # using combination of RDB and AOF for persistence: https://redis.io/topics/persistence
    volumes:
      - redis-data:/data
    networks:
      - xain-fl-dev
    ports:
      - "6379:6379"

  influxdb:
    image: influxdb:1.7 # current stable version, v2 is in Beta
    hostname: influxdb
    environment:
      INFLUXDB_DB: metrics
    volumes:
      - influxdb-data:/var/lib/influxdb
    networks:
      - xain-fl-dev
    ports:
      - "8086:8086"

  keycloak:
    image: jboss/keycloak:8.0.2
    hostname: keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: adminadmin
      DB_VENDOR: h2
      # Can't properly provision a login theme yet
#    volumes:
#      - ${PWD}/xain-theme-keycloak:/opt/jboss/keycloak/themes
#      - ${PWD}/xain-theme-keycloak/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml
    networks:
      - xain-fl-dev
    ports:
      - "8080:8080"

  grafana:
    image: grafana/grafana
    depends_on:
      - keycloak
    hostname: grafana
    ports:
      - "3000:3000"
    networks:
      - xain-fl-dev
    environment:
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "OAuth"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "grafana"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "c3fbd14d-dfe9-4dc3-9894-8a97bc6c6575"
      GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "http://localhost:8080/auth/realms/master/protocol/openid-connect/auth"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "http://keycloak:8080/auth/realms/master/protocol/openid-connect/token"
      GF_AUTH_GENERIC_OAUTH_API_URL: "http://keycloak:8080/auth/realms/master/protocol/openid-connect/userinfo"
      GF_SERVER_ENFORCE_DOMAIN: "false"

  xain-fl-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - /app/xain_fl.egg-info  #  don't use the local egg-info, if one exists
      - ${PWD}/xain_fl:/app/xain_fl
      - ${PWD}/setup.py:/app/setup.py
      - ${PWD}/README.md:/app/README.md
      - ${PWD}/configs/xain-fl.toml:/app/xain-fl.toml
    networks:
      - xain-fl-dev
    ports:
    - "50051:50051"

volumes:
  minio-data:
  redis-data:
  influxdb-data:

networks:
  xain-fl-dev:
