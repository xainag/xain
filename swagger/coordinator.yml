openapi: 3.0.1
info:
  title: XAIN FL Coordinator API
  description: PET version
  contact:
    email: engineering@xain.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.8.0
externalDocs:
  description: Find out more about XAIN FL
  url: https://docs.xain.io/
servers:
  - url: http://localhost:8081/
tags:
  - name: Coordinator
    description: API of the coordinator service
  - name: Aggregator
    description: API of the aggregator service
paths:
  /broadcast/round:
    get:
      tags:
        - Coordinator
      description: PET Step 1, 2 (publish coord_pk, sum, update, seed)
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishRoundMessage"
  /participant/sum:
    post:
      tags:
        - Coordinator
      description: PET Step 4 (send "sum" message)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SumMessage"
      responses:
        200:
          description: OK
        400:
          description: PET protocol error
  /broadcast/sum:
    get:
      tags:
        - Coordinator
      description: PET Step 8 publish "sum" participants
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishSumParticipantsMessage"
              example:
                part_pk_1: part_pk_fresh_1
                part_pk_2: part_pk_fresh_2
        204:
          description: If the coordinator can't yet provide the content, the response body will be empty.
  /participant/update:
    post:
      tags:
        - Coordinator
      description: PET Step 9 (send "update" message)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMessage"
      responses:
        200:
          description: OK
        400:
          description: PET protocol error
  /broadcast/seeds/{encr_pk}:
    get:
      tags:
        - Coordinator
      description: PET Step 11 publish encrypted seeds
      parameters:
        - name: encr_pk
          description: The public key for asymmetric encryption of the participant.
          in: path
          required: true
          schema:
            type: string
            format: byte
            minLength: 32
            maxLength: 32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishEncryptedSeedsMessage"
              example:
                part_pk_1: [seed_1, seed_2]
        204:
          description: If the coordinator can't yet provide the content, the response body will be empty.
  /participant/sum2:
    post:
      tags:
        - Coordinator
      description: PET Step 12 (send "update" message)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sum2Message"
      responses:
        200:
          description: OK
        400:
          description: PET protocol error
  /global_model:
    get:
      tags:
        - Aggregator
      description: Download the global model
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        404:
          description: model not found
components:
  schemas:
    SumMessage:
      description: Sum message
      type: object
      required:
        - message
      properties:
        message:
          type: string
          format: byte
    UpdateMessage:
      description: Update message
      type: object
      required:
        - message
      properties:
        message:
          type: string
          format: byte
    Sum2Message:
      description: Sum2 message
      type: object
      required:
        - message
      properties:
        message:
          type: string
          format: byte
    PublishRoundMessage:
      type: object
      properties:
        coord_pk:
          description: The public key of the coordinator.
          type: string
          format: byte
          minLength: 32
          maxLength: 32
        sum:
          description: The expected fraction of participants selected for computing the unmasking sum.
          type: number
          format: float
          minimum: 0
          maximum: 1
        update:
          description: The expected fraction of participants selected for submitting an updated local model for aggregation.
          type: number
          format: float
          minimum: 0
          maximum: 1
        seed:
          description: Is a random block of bits used for the selection of participants.
          type: string
          format: byte
          minLength: 32
          maxLength: 32
        global_model_url:
          description: The URL that points to the global model. Participants can use this URL to fetch the global model. On the first round, the value of the URL will be null.
          type: string
          format: url
          nullable: true
    PublishSumParticipantsMessage:
      type: object
      additionalProperties:
        type: string
        format: byte
    PublishEncryptedSeedsMessage:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
          format: byte
          minLength: 80
          maxLength: 80
